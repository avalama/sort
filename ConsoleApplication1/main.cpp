#include"Header.h"
int main()
{
    
	int rounds=0;
	srand(time(NULL) * time(NULL) * time(NULL) * time(NULL) * time(NULL) * time(NULL) //only way to get ACTUAL random number
		* time(NULL) * time(NULL) * time(NULL) * time(NULL) * time(NULL) * time(NULL)
		* time(NULL) * time(NULL) * time(NULL) * time(NULL) * time(NULL) * time(NULL));
    double mrr[256] = { -0.969617,-0.969125,-0.968616,-0.968089,-0.967545,-0.966981,-0.966398,-0.965793,-0.965165,-0.964514,-0.963838,-0.963135,-0.962404,-0.961643,-0.96085,-0.970094,-0.968528,-0.963691,-0.966284,-0.962978,-0.967445,-0.962236,-0.965672,-0.961464,-0.967996,-0.960658,-0.965036,-0.959819,-0.966875,-0.958942,-0.964376,-0.969042,-0.960485,-0.966784,-0.962838,-0.959632,-0.965566,-0.964255,-0.958741,-0.962086,-0.966186,-0.957809,-0.96736,-0.961302,-0.956834,-0.96356,-0.964923,-0.967917,-0.961955,-0.965479,-0.966106,-0.956625,-0.959467,-0.962717,-0.961161,-0.955585,-0.964828,-0.958562,-0.963449,-0.954494,-0.964152,-0.960332,-0.957616,-0.96671,-0.954276,-0.960204,-0.96262,-0.956442,-0.958409,-0.953108,-0.961044,-0.961848,-0.964071,-0.955386,-0.951879,-0.959327,-0.957449,-0.96336,-0.964755,-0.965413,-0.957312,-0.960105,-0.958286,-0.950333,-0.955218,-0.952904,-0.959216,-0.962549,-0.963297,-0.948938,-0.956291,-0.960955,-0.951653,-0.954091,-0.961769,-0.964016,-0.950127,-0.947201,-0.953945,-0.957211,-0.955089,-0.956176,-0.951469,-0.959139,-0.945603,-0.948706,-0.961719,-0.960897,-0.95274,-0.958198,-0.960038,-0.962507,-0.960008,-0.948527,-0.955003,-0.958149,-0.94997,-0.945369,-0.953845,-0.941788,-0.951334,-0.952623,-0.9591,-0.946996,-0.956104,-0.957152,-0.943636,-0.960876,-0.958147,-0.95714,-0.941556,-0.952561,-0.95497,-0.953797,-0.937378,-0.943438,-0.951255,-0.956082,-0.9452,-0.949873,-0.93954,-0.946854,-0.948409,-0.959106,-0.946788,-0.949846,-0.939358,-0.945111,-0.941409,-0.932216,-0.943322,-0.951244,-0.956117,-0.953812,-0.934781,-0.948364,-0.952564,-0.954995,-0.937155,-0.957183,-0.945115,-0.948403,-0.946811,-0.953898,-0.926085,-0.943303,-0.9499,-0.95264,-0.929178,-0.941364,-0.95131,-0.932016,-0.939283,-0.934629,-0.937045,-0.955089,-0.93707,-0.9434,-0.948542,-0.918671,-0.934621,-0.950048,-0.922474,-0.931966,-0.925928,-0.92908,-0.951466,-0.939337,-0.945229,-0.946939,-0.941441,-0.952803,-0.925979,-0.937256,-0.9095,-0.922468,-0.914295,-0.918593,-0.945469,-0.943632,-0.932099,-0.941661,-0.948795,-0.947186,-0.929176,-0.934783,-0.939542,-0.950304,-0.909564,-0.897825,-0.904066,-0.945856,-0.929505,-0.932449,-0.922732,-0.937631,-0.942047,-0.944019,-0.918808,-0.939923,-0.92628,-0.914445,-0.935148,-0.947571,-0.882376,-0.930108,-0.933052,-0.940507,-0.919376,-0.910053,-0.926879,-0.92332,-0.935747,-0.904485,-0.938223,-0.942621,-0.898143,-0.914982,-0.890851,-0.944582,-0.860791,-0.905477,-0.927823,-0.933945,-0.939062,-0.941319,-0.899103,-0.911055,-0.924287,-0.936612,-0.891749,-0.91598,-0.920362,-0.883164,-0.931027,-0.873006 };
	double arr[256],first[256], save, biggest = -999999999;
    int fo = sizeof(arr) / sizeof(double);
	for(int i = 0; i < fo; i++)
	{
		arr[i] = rand() % 100;
	}
    for (int i = 0; i < fo; i++)
    {
        cout << arr[i] << ",";
    }
    for (int i = 0; i < fo; i++)
    {
        first[i] = arr[i];
    }
    cout << endl << endl;/*
    for (int i = 0; i < 25; i++)
    {
        arr[i] = 1;
    }*/
    rounds=methood2(arr, fo,rounds);
    for (int i = 0; i < fo; i++)
    {
        cout << arr[i] << ",";
    }
    cout << endl << endl << rounds;
}